name: Docker Tests

on:
  push:
    branches: [ "*" ] # escucha todos los pushes
  pull_request:
    branches: [ "*" ] # escucha todos los PRs

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Construir imÃ¡genes de cada carpeta que contenga un Dockerfile
      - name: Build Docker images
        run: |
          for dir in CI Cache Capas Dependencies Distroless Ignore MultiStage Prune Scripts Usuarios dockerscan; do
            if [ -f "$dir/Dockerfile" ]; then
              echo "ðŸ”¨ Construyendo imagen en $dir ..."
              docker build -t test-$dir $dir || exit 1
            fi
          done

      # 4. Probar que los contenedores corren
      - name: Run container tests
        run: |
          for dir in CI Cache Capas Dependencies Distroless Ignore MultiStage Prune Scripts Usuarios dockerscan; do
            if [ -f "$dir/Dockerfile" ]; then
              echo "ðŸš€ Ejecutando contenedor de test-$dir ..."
              docker run --rm test-$dir echo "âœ… Imagen $dir funciona correctamente"
            fi
          done
